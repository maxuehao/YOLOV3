name: "DarkNet"
input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 416
  dim: 416
}

layer {
    bottom: "data"
    top: "layer1-conv"
    name: "layer1-conv"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 7
        pad: 3
        stride: 2
        bias_term: false
    }
}
layer {
    bottom: "layer1-conv"
    top: "layer1-conv"
    name: "layer1-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer1-conv"
    top: "layer1-conv"
    name: "layer1-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer1-conv"
    top: "layer1-conv"
    name: "layer1-act"
    type: "ReLU"
}
layer {
    bottom: "layer1-conv"
    top: "layer2-maxpool"
    name: "layer2-maxpool"
    type: "Pooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}
layer {
    bottom: "layer2-maxpool"
    top: "layer3-conv"
    name: "layer3-conv"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer3-conv"
    top: "layer3-conv"
    name: "layer3-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer3-conv"
    top: "layer3-conv"
    name: "layer3-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer2-maxpool"
    top: "layer5-conv"
    name: "layer5-conv"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer5-conv"
    top: "layer5-conv"
    name: "layer5-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer5-conv"
    top: "layer5-conv"
    name: "layer5-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer5-conv"
    top: "layer5-conv"
    name: "layer5-act"
    type: "ReLU"
}
layer {
    bottom: "layer5-conv"
    top: "layer6-conv"
    name: "layer6-conv"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer6-conv"
    top: "layer6-conv"
    name: "layer6-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer6-conv"
    top: "layer6-conv"
    name: "layer6-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer3-conv"
    bottom: "layer6-conv"
    top: "layer7-shortcut"
    name: "layer7-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer7-shortcut"
    top: "layer7-shortcut"
    name: "layer7-act"
    type: "ReLU"
}
layer {
    bottom: "layer7-shortcut"
    top: "layer8-conv"
    name: "layer8-conv"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer8-conv"
    top: "layer8-conv"
    name: "layer8-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer8-conv"
    top: "layer8-conv"
    name: "layer8-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer8-conv"
    top: "layer8-conv"
    name: "layer8-act"
    type: "ReLU"
}
layer {
    bottom: "layer8-conv"
    top: "layer9-conv"
    name: "layer9-conv"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer9-conv"
    top: "layer9-conv"
    name: "layer9-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer9-conv"
    top: "layer9-conv"
    name: "layer9-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer7-shortcut"
    bottom: "layer9-conv"
    top: "layer10-shortcut"
    name: "layer10-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer10-shortcut"
    top: "layer10-shortcut"
    name: "layer10-act"
    type: "ReLU"
}
layer {
    bottom: "layer10-shortcut"
    top: "layer11-maxpool"
    name: "layer11-maxpool"
    type: "Pooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}
layer {
    bottom: "layer11-maxpool"
    top: "layer12-conv"
    name: "layer12-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer12-conv"
    top: "layer12-conv"
    name: "layer12-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer12-conv"
    top: "layer12-conv"
    name: "layer12-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer11-maxpool"
    top: "layer14-conv"
    name: "layer14-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer14-conv"
    top: "layer14-conv"
    name: "layer14-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer14-conv"
    top: "layer14-conv"
    name: "layer14-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer14-conv"
    top: "layer14-conv"
    name: "layer14-act"
    type: "ReLU"
}
layer {
    bottom: "layer14-conv"
    top: "layer15-conv"
    name: "layer15-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer15-conv"
    top: "layer15-conv"
    name: "layer15-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer15-conv"
    top: "layer15-conv"
    name: "layer15-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer12-conv"
    bottom: "layer15-conv"
    top: "layer16-shortcut"
    name: "layer16-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer16-shortcut"
    top: "layer16-shortcut"
    name: "layer16-act"
    type: "ReLU"
}
layer {
    bottom: "layer16-shortcut"
    top: "layer17-conv"
    name: "layer17-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer17-conv"
    top: "layer17-conv"
    name: "layer17-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer17-conv"
    top: "layer17-conv"
    name: "layer17-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer17-conv"
    top: "layer17-conv"
    name: "layer17-act"
    type: "ReLU"
}
layer {
    bottom: "layer17-conv"
    top: "layer18-conv"
    name: "layer18-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer18-conv"
    top: "layer18-conv"
    name: "layer18-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer18-conv"
    top: "layer18-conv"
    name: "layer18-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer16-shortcut"
    bottom: "layer18-conv"
    top: "layer19-shortcut"
    name: "layer19-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer19-shortcut"
    top: "layer19-shortcut"
    name: "layer19-act"
    type: "ReLU"
}
layer {
    bottom: "layer19-shortcut"
    top: "layer20-maxpool"
    name: "layer20-maxpool"
    type: "Pooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}
layer {
    bottom: "layer20-maxpool"
    top: "layer21-conv"
    name: "layer21-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer21-conv"
    top: "layer21-conv"
    name: "layer21-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer21-conv"
    top: "layer21-conv"
    name: "layer21-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer20-maxpool"
    top: "layer23-conv"
    name: "layer23-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer23-conv"
    top: "layer23-conv"
    name: "layer23-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer23-conv"
    top: "layer23-conv"
    name: "layer23-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer23-conv"
    top: "layer23-conv"
    name: "layer23-act"
    type: "ReLU"
}
layer {
    bottom: "layer23-conv"
    top: "layer24-conv"
    name: "layer24-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer24-conv"
    top: "layer24-conv"
    name: "layer24-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer24-conv"
    top: "layer24-conv"
    name: "layer24-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer21-conv"
    bottom: "layer24-conv"
    top: "layer25-shortcut"
    name: "layer25-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer25-shortcut"
    top: "layer25-shortcut"
    name: "layer25-act"
    type: "ReLU"
}
layer {
    bottom: "layer25-shortcut"
    top: "layer26-conv"
    name: "layer26-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer26-conv"
    top: "layer26-conv"
    name: "layer26-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer26-conv"
    top: "layer26-conv"
    name: "layer26-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer26-conv"
    top: "layer26-conv"
    name: "layer26-act"
    type: "ReLU"
}
layer {
    bottom: "layer26-conv"
    top: "layer27-conv"
    name: "layer27-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer27-conv"
    top: "layer27-conv"
    name: "layer27-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer27-conv"
    top: "layer27-conv"
    name: "layer27-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer25-shortcut"
    bottom: "layer27-conv"
    top: "layer28-shortcut"
    name: "layer28-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer28-shortcut"
    top: "layer28-shortcut"
    name: "layer28-act"
    type: "ReLU"
}
layer {
    bottom: "layer28-shortcut"
    top: "layer29-maxpool"
    name: "layer29-maxpool"
    type: "Pooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}
layer {
    bottom: "layer29-maxpool"
    top: "layer30-conv"
    name: "layer30-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer30-conv"
    top: "layer30-conv"
    name: "layer30-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer30-conv"
    top: "layer30-conv"
    name: "layer30-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer29-maxpool"
    top: "layer32-conv"
    name: "layer32-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer32-conv"
    top: "layer32-conv"
    name: "layer32-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer32-conv"
    top: "layer32-conv"
    name: "layer32-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer32-conv"
    top: "layer32-conv"
    name: "layer32-act"
    type: "ReLU"
}
layer {
    bottom: "layer32-conv"
    top: "layer33-conv"
    name: "layer33-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer33-conv"
    top: "layer33-conv"
    name: "layer33-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer33-conv"
    top: "layer33-conv"
    name: "layer33-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer30-conv"
    bottom: "layer33-conv"
    top: "layer34-shortcut"
    name: "layer34-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer34-shortcut"
    top: "layer34-shortcut"
    name: "layer34-act"
    type: "ReLU"
}
layer {
    bottom: "layer34-shortcut"
    top: "layer35-conv"
    name: "layer35-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer35-conv"
    top: "layer35-conv"
    name: "layer35-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer35-conv"
    top: "layer35-conv"
    name: "layer35-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer35-conv"
    top: "layer35-conv"
    name: "layer35-act"
    type: "ReLU"
}
layer {
    bottom: "layer35-conv"
    top: "layer36-conv"
    name: "layer36-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer36-conv"
    top: "layer36-conv"
    name: "layer36-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer36-conv"
    top: "layer36-conv"
    name: "layer36-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer34-shortcut"
    bottom: "layer36-conv"
    top: "layer37-shortcut"
    name: "layer37-shortcut"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
    bottom: "layer37-shortcut"
    top: "layer37-shortcut"
    name: "layer37-act"
    type: "ReLU"
}
layer {
    bottom: "layer37-shortcut"
    top: "layer38-conv"
    name: "layer38-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer38-conv"
    top: "layer38-conv"
    name: "layer38-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer38-conv"
    top: "layer38-conv"
    name: "layer38-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer38-conv"
    top: "layer38-conv"
    name: "layer38-act"
    type: "ReLU"
}
layer {
    bottom: "layer38-conv"
    top: "layer39-conv"
    name: "layer39-conv"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer39-conv"
    top: "layer39-conv"
    name: "layer39-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer39-conv"
    top: "layer39-conv"
    name: "layer39-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer39-conv"
    top: "layer39-conv"
    name: "layer39-act"
    type: "ReLU"
}
layer {
    bottom: "layer39-conv"
    top: "layer40-conv"
    name: "layer40-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer40-conv"
    top: "layer40-conv"
    name: "layer40-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer40-conv"
    top: "layer40-conv"
    name: "layer40-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer40-conv"
    top: "layer40-conv"
    name: "layer40-act"
    type: "ReLU"
}
layer {
    bottom: "layer40-conv"
    top: "layer41-conv"
    name: "layer41-conv"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer41-conv"
    top: "layer41-conv"
    name: "layer41-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer41-conv"
    top: "layer41-conv"
    name: "layer41-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer41-conv"
    top: "layer41-conv"
    name: "layer41-act"
    type: "ReLU"
}
layer {
    bottom: "layer41-conv"
    top: "layer42-conv"
    name: "layer42-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer42-conv"
    top: "layer42-conv"
    name: "layer42-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer42-conv"
    top: "layer42-conv"
    name: "layer42-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer42-conv"
    top: "layer42-conv"
    name: "layer42-act"
    type: "ReLU"
}
layer {
    bottom: "layer42-conv"
    top: "layer43-conv"
    name: "layer43-conv"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer43-conv"
    top: "layer43-conv"
    name: "layer43-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer43-conv"
    top: "layer43-conv"
    name: "layer43-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer43-conv"
    top: "layer43-conv"
    name: "layer43-act"
    type: "ReLU"
}
layer {
    bottom: "layer43-conv"
    top: "layer44-conv"
    name: "layer44-conv"
    type: "Convolution"
    convolution_param {
        num_output: 42
        kernel_size: 1
        stride: 1
        bias_term: true
    }
}

layer {
    bottom: "layer42-conv"
    top: "layer47-conv"
    name: "layer47-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer47-conv"
    top: "layer47-conv"
    name: "layer47-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer47-conv"
    top: "layer47-conv"
    name: "layer47-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer47-conv"
    top: "layer47-conv"
    name: "layer47-act"
    type: "ReLU"
}
layer {
    bottom: "layer47-conv"
    top: "layer48-upsample"
    name: "layer48-upsample"
    type: "Upsample"
    upsample_param {
        scale: 2
    }
}
layer {
    bottom: "layer48-upsample"
    bottom: "layer28-shortcut"
    top: "layer49-concat"
    name: "layer49-concat"
    type: "Concat"
}
layer {
    bottom: "layer49-concat"
    top: "layer50-conv"
    name: "layer50-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer50-conv"
    top: "layer50-conv"
    name: "layer50-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer50-conv"
    top: "layer50-conv"
    name: "layer50-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer50-conv"
    top: "layer50-conv"
    name: "layer50-act"
    type: "ReLU"
}
layer {
    bottom: "layer50-conv"
    top: "layer51-conv"
    name: "layer51-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer51-conv"
    top: "layer51-conv"
    name: "layer51-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer51-conv"
    top: "layer51-conv"
    name: "layer51-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer51-conv"
    top: "layer51-conv"
    name: "layer51-act"
    type: "ReLU"
}
layer {
    bottom: "layer51-conv"
    top: "layer52-conv"
    name: "layer52-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer52-conv"
    top: "layer52-conv"
    name: "layer52-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer52-conv"
    top: "layer52-conv"
    name: "layer52-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer52-conv"
    top: "layer52-conv"
    name: "layer52-act"
    type: "ReLU"
}
layer {
    bottom: "layer52-conv"
    top: "layer53-conv"
    name: "layer53-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer53-conv"
    top: "layer53-conv"
    name: "layer53-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer53-conv"
    top: "layer53-conv"
    name: "layer53-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer53-conv"
    top: "layer53-conv"
    name: "layer53-act"
    type: "ReLU"
}
layer {
    bottom: "layer53-conv"
    top: "layer54-conv"
    name: "layer54-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer54-conv"
    top: "layer54-conv"
    name: "layer54-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer54-conv"
    top: "layer54-conv"
    name: "layer54-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer54-conv"
    top: "layer54-conv"
    name: "layer54-act"
    type: "ReLU"
}
layer {
    bottom: "layer54-conv"
    top: "layer55-conv"
    name: "layer55-conv"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer55-conv"
    top: "layer55-conv"
    name: "layer55-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer55-conv"
    top: "layer55-conv"
    name: "layer55-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer55-conv"
    top: "layer55-conv"
    name: "layer55-act"
    type: "ReLU"
}
layer {
    bottom: "layer55-conv"
    top: "layer56-conv"
    name: "layer56-conv"
    type: "Convolution"
    convolution_param {
        num_output: 42
        kernel_size: 1
        stride: 1
        bias_term: true
    }
}

layer {
    bottom: "layer54-conv"
    top: "layer59-conv"
    name: "layer59-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer59-conv"
    top: "layer59-conv"
    name: "layer59-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer59-conv"
    top: "layer59-conv"
    name: "layer59-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer59-conv"
    top: "layer59-conv"
    name: "layer59-act"
    type: "ReLU"
}
layer {
    bottom: "layer59-conv"
    top: "layer60-upsample"
    name: "layer60-upsample"
    type: "Upsample"
    upsample_param {
        scale: 2
    }
}
layer {
    bottom: "layer60-upsample"
    bottom: "layer19-shortcut"
    top: "layer61-concat"
    name: "layer61-concat"
    type: "Concat"
}
layer {
    bottom: "layer61-concat"
    top: "layer62-conv"
    name: "layer62-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer62-conv"
    top: "layer62-conv"
    name: "layer62-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer62-conv"
    top: "layer62-conv"
    name: "layer62-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer62-conv"
    top: "layer62-conv"
    name: "layer62-act"
    type: "ReLU"
}
layer {
    bottom: "layer62-conv"
    top: "layer63-conv"
    name: "layer63-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer63-conv"
    top: "layer63-conv"
    name: "layer63-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer63-conv"
    top: "layer63-conv"
    name: "layer63-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer63-conv"
    top: "layer63-conv"
    name: "layer63-act"
    type: "ReLU"
}
layer {
    bottom: "layer63-conv"
    top: "layer64-conv"
    name: "layer64-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer64-conv"
    top: "layer64-conv"
    name: "layer64-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer64-conv"
    top: "layer64-conv"
    name: "layer64-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer64-conv"
    top: "layer64-conv"
    name: "layer64-act"
    type: "ReLU"
}
layer {
    bottom: "layer64-conv"
    top: "layer65-conv"
    name: "layer65-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer65-conv"
    top: "layer65-conv"
    name: "layer65-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer65-conv"
    top: "layer65-conv"
    name: "layer65-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer65-conv"
    top: "layer65-conv"
    name: "layer65-act"
    type: "ReLU"
}
layer {
    bottom: "layer65-conv"
    top: "layer66-conv"
    name: "layer66-conv"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer66-conv"
    top: "layer66-conv"
    name: "layer66-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer66-conv"
    top: "layer66-conv"
    name: "layer66-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer66-conv"
    top: "layer66-conv"
    name: "layer66-act"
    type: "ReLU"
}
layer {
    bottom: "layer66-conv"
    top: "layer67-conv"
    name: "layer67-conv"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
    }
}
layer {
    bottom: "layer67-conv"
    top: "layer67-conv"
    name: "layer67-bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}
layer {
    bottom: "layer67-conv"
    top: "layer67-conv"
    name: "layer67-scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
    bottom: "layer67-conv"
    top: "layer67-conv"
    name: "layer67-act"
    type: "ReLU"
}
layer {
    bottom: "layer67-conv"
    top: "layer68-conv"
    name: "layer68-conv"
    type: "Convolution"
    convolution_param {
        num_output: 42
        kernel_size: 1
        stride: 1
        bias_term: true
    }
}

